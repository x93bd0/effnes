pub enum CPUVector {
    Nmi = 0xFFFA,
    Rst = 0xFFFC,
    Brk = 0xFFFE,
}

pub enum Flag {
    Carry = 0b1,
    Zero = 0b10,
    IntDis = 0b100,
    Decimal = 0b1000,
    Break = 0b10000,
    Reserved = 0b100000,
    Overflow = 0b1000000,
    Negative = 0b10000000,
}

pub mod addr_mode {
    pub const ACCUMULATOR: u8 = 0x0;
    pub const IMMEDIATE: u8 = 0x1;
    pub const IMPLIED: u8 = 0x2;
    pub const RELATIVE: u8 = 0x3;
    pub const ABSOLUTE: u8 = 0x4;
    pub const ZEROPAGE: u8 = 0x5;
    pub const INDIRECT: u8 = 0x6;
    pub const ABSOLUTEX: u8 = 0x7;
    pub const ABSOLUTEY: u8 = 0x8;
    pub const ZEROPAGEX: u8 = 0x9;
    pub const ZEROPAGEY: u8 = 0xA;
    pub const INDIRECTX: u8 = 0xB;
    pub const INDIRECTY: u8 = 0xC;
}

pub mod opcode {
    pub const ADC: u8 = 0x1;
    pub const AND: u8 = 0x2;
    pub const ASL: u8 = 0x3;
    pub const BCC: u8 = 0x4;
    pub const BCS: u8 = 0x5;
    pub const BEQ: u8 = 0x6;
    pub const BIT: u8 = 0x7;
    pub const BMI: u8 = 0x8;
    pub const BNE: u8 = 0x9;
    pub const BPL: u8 = 0xA;
    pub const BRK: u8 = 0xB;
    pub const BVC: u8 = 0xC;
    pub const BVS: u8 = 0xD;
    pub const CLC: u8 = 0xE;
    pub const CLD: u8 = 0xF;
    pub const CLI: u8 = 0x10;
    pub const CLV: u8 = 0x11;
    pub const CMP: u8 = 0x12;
    pub const CPX: u8 = 0x13;
    pub const CPY: u8 = 0x14;
    pub const DCP: u8 = 0x3B;
    pub const DEC: u8 = 0x15;
    pub const DEX: u8 = 0x16;
    pub const DEY: u8 = 0x17;
    pub const EOR: u8 = 0x18;
    pub const INC: u8 = 0x19;
    pub const INX: u8 = 0x1A;
    pub const INY: u8 = 0x1B;
    pub const ISC: u8 = 0x3C;
    pub const JMP: u8 = 0x1C;
    pub const JSR: u8 = 0x1D;
    pub const LAX: u8 = 0x39;
    pub const LDA: u8 = 0x1E;
    pub const LDX: u8 = 0x1F;
    pub const LDY: u8 = 0x20;
    pub const LSR: u8 = 0x21;
    pub const NOP: u8 = 0x22;
    pub const ORA: u8 = 0x23;
    pub const PHA: u8 = 0x24;
    pub const PHP: u8 = 0x25;
    pub const PLA: u8 = 0x26;
    pub const PLP: u8 = 0x27;
    pub const RLA: u8 = 0x0;
    pub const ROL: u8 = 0x28;
    pub const ROR: u8 = 0x29;
    pub const RRA: u8 = 0x3F;
    pub const RTI: u8 = 0x2A;
    pub const RTS: u8 = 0x2B;
    pub const SAX: u8 = 0x3A;
    pub const SBC: u8 = 0x2C;
    pub const SEC: u8 = 0x2D;
    pub const SED: u8 = 0x2E;
    pub const SEI: u8 = 0x2F;
    pub const SLO: u8 = 0x3D;
    pub const SRE: u8 = 0x3E;
    pub const STA: u8 = 0x30;
    pub const STX: u8 = 0x31;
    pub const STY: u8 = 0x32;
    pub const TAX: u8 = 0x33;
    pub const TAY: u8 = 0x34;
    pub const TSX: u8 = 0x35;
    pub const TXA: u8 = 0x36;
    pub const TXS: u8 = 0x37;
    pub const TYA: u8 = 0x38;
}

pub const TRANSLATION_TABLE: [u16; 256] = [
       0b1011001011000,  0b100011101110100,                0b0,  0b111101101111100,  0b100010010101000,  0b100011010101000,      0b11010110000,  0b111101010110000,  0b100101001001000,  0b100011000100100,      0b11000000100,                0b0,  0b100010010001100,  0b100011010001100,      0b11010010100,  0b111101010010100,
       0b1010001100110,  0b100011110010010,                0b0,  0b111101110011100,  0b100010100101100,  0b100011100101100,      0b11100110100,  0b111101100110100,    0b1110001000100,  0b100011100001110,  0b100010001000100,  0b111101100011000,  0b100010011101110,  0b100011011101110,      0b11011111000,  0b111101011111000,
      0b11101010010100,      0b10101110100,                0b0,        0b101111100,     0b111010101000,      0b10010101000,  0b101000010110000,         0b10110000,  0b100111001001100,      0b10000100100,  0b101000000000100,                0b0,     0b111010001100,      0b10010001100,  0b101000010010100,         0b10010100,
       0b1000001100110,      0b10110010010,                0b0,        0b110011100,  0b100010100101100,      0b10100101100,  0b101000100110100,        0b100110100,  0b101101001000100,      0b10100001110,  0b100010001000100,        0b100011000,  0b100010011101110,      0b10011101110,  0b101000011111000,         0b11111000,
     0b101010001010100,   0b11000101110100,                0b0,  0b111110101111100,  0b100010010101000,   0b11000010101000,  0b100001010110000,  0b111110010110000,  0b100100001001000,   0b11000000100100,  0b100001000000100,                0b0,   0b11100010001000,   0b11000010001100,  0b100001010010100,  0b111110010010100,
       0b1100001100110,   0b11000110010010,                0b0,  0b111110110011100,  0b100010100101100,   0b11000100101100,  0b100001100110100,  0b111110100110100,   0b10000001000100,   0b11000100001110,  0b100010001000100,  0b111110100011000,  0b100010011101110,   0b11000011101110,  0b100001011111000,  0b111110011111000,
     0b101011001010100,       0b1101110100,                0b0,  0b111111101111100,  0b100010010101000,       0b1010101000,  0b101001010110000,  0b111111010110000,  0b100110001001100,       0b1000100100,  0b101001000000100,                0b0,   0b11100011010000,       0b1010001100,  0b101001010010100,  0b111111010010100,
       0b1101001100110,       0b1110010010,                0b0,  0b111111110011100,  0b100010100101100,       0b1100101100,  0b101001100110100,  0b111111100110100,  0b101111001000100,       0b1100001110,  0b100010001000100,  0b111111100011000,  0b100010011101110,       0b1011101110,  0b101001011111000,  0b111111011111000,
     0b100010000100100,  0b110000101110100,  0b100010000100100,  0b111010101110100,  0b110010010101000,  0b110000010101000,  0b110001010101000,  0b111010010101000,   0b10111001000100,  0b100010000100100,  0b110110001000100,                0b0,  0b110010010001100,  0b110000010001100,  0b110001010001100,  0b111010010001100,
        0b100001100110,  0b110000110010100,                0b0,                0b0,  0b110010100101100,  0b110000100101100,  0b110001101001100,  0b111010101001100,  0b111000001000100,  0b110000100010000,  0b110111001000100,                0b0,                0b0,  0b110000011110000,                0b0,                0b0,
     0b100000000100100,   0b11110101110100,   0b11111000100100,  0b111001101110100,  0b100000010101000,   0b11110010101000,   0b11111010101000,  0b111001010101000,  0b110100001000100,   0b11110000100100,  0b110011001000100,                0b0,  0b100000010001100,   0b11110010001100,   0b11111010001100,  0b111001010001100,
        0b101001100110,   0b11110110010010,                0b0,  0b111001110010010,  0b100000100101100,   0b11110100101100,   0b11111101001100,  0b111001101001100,   0b10001001000100,   0b11110100001110,  0b110101001000100,                0b0,  0b100000011101110,   0b11110011101110,   0b11111100001110,  0b111001100001110,
      0b10100000100100,   0b10010101110100,  0b100010000100100,  0b111011101111100,   0b10100010101000,   0b10010010101000,   0b10101010110000,  0b111011010110000,   0b11011001000100,   0b10010000100100,   0b10110001000100,                0b0,   0b10100010001100,   0b10010010001100,   0b10101010010100,  0b111011010010100,
       0b1001001100110,   0b10010110010010,                0b0,  0b111011110011100,  0b100010100101100,   0b10010100101100,   0b10101100110100,  0b111011100110100,    0b1111001000100,   0b10010100001110,  0b100010001000100,  0b111011100011000,  0b100010011101110,   0b10010011101110,   0b10101011111000,  0b111011011111000,
      0b10011000100100,  0b101100101110100,  0b100010000100100,  0b111100101111100,   0b10011010101000,  0b101100010101000,   0b11001010110000,  0b111100010110000,   0b11010001000100,  0b101100000100100,  0b100010001000100,  0b101100000100100,   0b10011010001100,  0b101100010001100,   0b11001010010100,  0b111100010010100,
        0b110001100110,  0b101100110010010,                0b0,  0b111100110011100,  0b100010100101100,  0b101100100101100,   0b11001100110100,  0b111100100110100,  0b101110001000100,  0b101100100001110,  0b100010001000100,  0b111100100011000,  0b100010011101110,  0b101100011101110,   0b11001011111000,  0b111100011111000,
];
